{"version":3,"sources":["./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/meeting/meeting.component.ts","./src/app/meeting/meeting.component.html","./src/app/game.guard.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/material.modules.ts","./src/app/app.module.ts","./src/app/chat.service.ts","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/meeting.service.ts","./src/app/app-routing.module.ts","./src/app/signalr.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ChatService } from '../chat.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  constructor(private chatService: ChatService) { }\n\n  messages$ = this.chatService.chatMessages$;\n  ngOnInit(): void {\n  }\n\n  loginForm = new FormGroup({\n    name: new FormControl(null, [Validators.required]),\n    message: new FormControl(null, [Validators.required])\n  });\n\n  SendMessage() {\n    if (this.loginForm.valid) {\n      this.chatService.sendMessage(this.loginForm.value.name, this.loginForm.value.message)\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" class=\"d-flex justify-content-center\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Name</mat-label>\n        <input formControlName=\"name\" matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Message</mat-label>\n        <input formControlName=\"message\" matInput>\n    </mat-form-field>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"SendMessage()\">Send</button>\n</form>\n<div class=\"d-flex flex-column text-center\" *ngIf=\"messages$ | async as messages\">\n    <p *ngFor=\"let message of messages\"><span style=\"font-weight: bold;\">{{message.name}}:</span>{{message.message}}</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SignalrService } from '../signalr.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private signalrService: SignalrService) { }\n\n  ngOnInit(): void {\n  }\n\n  loginForm = new FormGroup({\n    name: new FormControl(null, [Validators.required]),\n    team: new FormControl(null, [Validators.required])\n  });\n\n  Start() {\n    if (this.loginForm.valid) {\n      this.signalrService.joinTeam(this.loginForm.value.name, this.loginForm.value.team)\n    }\n  }\n}\n","<div class=\"h-100 d-flex flex-column justify-content-center align-items-center\">\n    <h1>Welcome</h1>\n    <p>Choose a name and a team to fight for.</p>\n\n    <form [formGroup]=\"loginForm\" class=\"d-flex flex-column\">\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Name</mat-label>\n            <input formControlName=\"name\" matInput>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Team</mat-label>\n            <mat-select formControlName=\"team\" matNativeControl>\n                <mat-option value=\"red\">RED</mat-option>\n                <mat-option value=\"blue\">BLUE</mat-option>\n            </mat-select>\n        </mat-form-field>\n    </form>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"Start()\">Join Battle</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MeetingService } from '../meeting.service';\n\n@Component({\n  selector: 'app-meeting',\n  templateUrl: './meeting.component.html',\n  styleUrls: ['./meeting.component.scss']\n})\nexport class MeetingComponent {\n\n  constructor(private meetingService: MeetingService) { }\n\n  meetingState$ = this.meetingService.meetingState$;\n\n  meetingForm = new FormGroup({\n    meeting: new FormControl(null, [Validators.required]),\n    role: new FormControl(null, [Validators.required]),\n    device: new FormControl(null, [Validators.required])\n  });\n\n\n  joinMeeting() {\n    console.log(+this.meetingForm.get(\"meeting\").value, +this.meetingForm.get(\"role\").value, +this.meetingForm.get(\"device\").value);\n    this.meetingService.joinMeeting(+this.meetingForm.get(\"meeting\").value, +this.meetingForm.get(\"role\").value, +this.meetingForm.get(\"device\").value);\n  }\n\n  textForm = new FormGroup({\n    text: new FormControl(null, [Validators.required]),\n  });\n\n  addText() {\n    console.log(this.textForm.get(\"text\").value);\n    this.meetingService.addText(this.textForm.get(\"text\").value);\n  }\n}\n","<form [formGroup]=\"meetingForm\" class=\"d-flex justify-content-center\">\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Meeting ID</mat-label>\n        <input formControlName=\"meeting\" matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Role</mat-label>\n        <input formControlName=\"role\" matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Device</mat-label>\n        <input formControlName=\"device\" matInput>\n    </mat-form-field>\n\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"joinMeeting()\">Send</button>\n</form>\n\n\n<ng-container *ngIf=\"meetingState$ | async as meeting\">\n\n    <form [formGroup]=\"textForm\" class=\"d-flex justify-content-center\">\n\n        <mat-form-field appearance=\"outline\">\n            <mat-label>Text</mat-label>\n            <input formControlName=\"text\" matInput>\n        </mat-form-field>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"addText()\">Send</button>\n    </form>\n\n    <h1>Meeting: {{meeting.id}}</h1>\n    <p>\n        {{meeting.meetingText}}\n    </p>\n</ng-container>","// src/app/auth/auth-guard.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { SignalrService } from './signalr.service';\r\n@Injectable()\r\nexport class GameGuard implements CanActivate {\r\n    constructor(public signalrService: SignalrService, public router: Router) { }\r\n    canActivate(): boolean {\r\n        if (!this.signalrService.getConnectionid()) {\r\n            this.router.navigate(['']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { SignalrService } from './signalr.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ClickWar';\n\n  constructor(private signalrService: SignalrService) {\n\n  }\n}","<router-outlet></router-outlet>","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\n\r\nexport const MaterialModules = [\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCheckboxModule,\r\n    MatCheckboxModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatExpansionModule,\r\n    MatButtonToggleModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatDialogModule,\r\n    MatTooltipModule,\r\n    MatSnackBarModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatNativeDateModule\r\n]","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { MaterialModules } from './material.modules';\nimport { GameComponent } from './game/game.component';\nimport { HomeComponent } from './home/home.component';\nimport { GameGuard } from './game.guard';\nimport { ChatComponent } from './chat/chat.component';\nimport { MeetingComponent } from './meeting/meeting.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    GameComponent,\n    ChatComponent,\n    MeetingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    MaterialModules\n  ],\n  providers: [GameGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { Subject } from 'rxjs';\nimport { shareReplay, take, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  private hubConnection: HubConnection = new HubConnectionBuilder().withUrl('/hubs/chat').build();\n\n  constructor() {\n    this.startConnection();\n    this.addListeners();\n  }\n\n  private chatMessagesSubject = new Subject<ChatMessage[]>()\n  chatMessages$ = this.chatMessagesSubject.asObservable().pipe(\n    shareReplay(1)\n  );\n\n  private startConnection() {\n    this.hubConnection.start()\n      .catch((err) => console.log('error while establishing signalr connection: ' + err))\n  }\n\n  private addListeners() {\n    this.hubConnection.on(\"AllMessages\", (messages) => {\n      this.chatMessagesSubject.next(messages);\n    });\n    this.hubConnection.on(\"NewMessage\", (message) => {\n      this.chatMessages$.pipe(\n        take(1),\n      ).subscribe({\n        next: (messages) => this.chatMessagesSubject.next([...messages, message])\n      });\n    });\n  }\n\n  sendMessage(name: string, message: string) {\n    this.hubConnection.invoke(\"Message\", name, message)\n      .catch((err) => console.log('failed to join team: ' + err));\n  }\n}\n\ninterface ChatMessage {\n  name: string;\n  message: string;\n}","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { SignalrService } from '../signalr.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GameComponent implements OnInit {\n\n  constructor(private signalrService: SignalrService) { }\n\n  gameState$ = this.signalrService.gameState$.pipe(\n    map(state => ({\n      winner: state.winner,\n      redCastle: state.redCastle,\n      redFighters: state.fighters.filter(fighter => fighter.team == \"red\"),\n      blueCastle: state.blueCastle,\n      blueFighters: state.fighters.filter(fighter => fighter.team == \"blue\")\n    }))\n  )\n\n  ngOnInit(): void {\n  }\n\n  attack() {\n    this.signalrService.attack();\n  }\n}\n","<div class=\"d-flex\" class=\"h-100 d-flex\" *ngIf=\"gameState$ | async as gameState\">\n    <ng-container *ngIf=\"!gameState.winner\">\n        <div id=\"red\" class=\"d-flex flex-grow-1\">\n            <div id=\"red-fighters\" class=\"d-flex flex-column flex-grow-1 justify-content-center align-items-center\">\n                <p *ngFor=\"let fighter of gameState.redFighters\" style=\"color: red;\">\n                    {{fighter.name}}\n                </p>\n            </div>\n            <div id=\"red-castle\" class=\"d-flex flex-column flex-grow-1 justify-content-center align-items-center\"\n                (click)=\"attack()\" style=\"background-color: orangered;\">\n                <h1>Red Castle:</h1>\n                <h1>{{gameState.redCastle.health}}</h1>\n            </div>\n        </div>\n        <div id=\"blue\" class=\"d-flex flex-grow-1\">\n            <div id=\"blue-castle\" class=\"d-flex flex-column flex-grow-1 justify-content-center align-items-center\"\n                (click)=\"attack()\" style=\"background-color: skyblue;\">\n                <h1>Blue Castle:</h1>\n                <h1>{{gameState.blueCastle.health}}</h1>\n            </div>\n            <div id=\"blue-fighters\" class=\"d-flex flex-column flex-grow-1 justify-content-center align-items-center\">\n                <p *ngFor=\"let fighter of gameState.blueFighters\" style=\"color: blue;\">\n                    {{fighter.name}}\n                </p>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"gameState.winner\">\n        <div class=\"w-100 h-100 d-flex justify-content-center align-items-center\"\n            [style.background]=\"gameState.winner == 'red'? 'red': 'blue'\">\n            <h1 style=\"color:white;font-size: xxx-large;text-transform: uppercase;\">{{gameState.winner}} team won</h1>\n        </div>\n    </ng-container>\n</div>","import { Injectable } from '@angular/core';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MeetingService {\n\n  private hubConnection: HubConnection = new HubConnectionBuilder().withUrl('/hubs/meeting').build();\n\n  constructor() {\n    this.startConnection();\n    this.addListeners();\n  }\n\n  private meetingStateSubject = new Subject<Meeting>();\n  meetingState$ = this.meetingStateSubject.asObservable();\n\n  private startConnection() {\n    this.hubConnection.start()\n      .catch((err) => console.log('error while establishing signalr connection: ' + err))\n  }\n\n  private addListeners() {\n    this.hubConnection.on(\"GetMeetingState\", (meeting) => {\n      this.meetingStateSubject.next(meeting);\n    });\n  }\n\n  joinMeeting(meetingId: number, role: number, device: number) {\n    this.hubConnection.invoke(\"JoinMeeting\", meetingId, role, device)\n      .catch((err) => console.log('failed to join meeting: ' + err));\n  }\n\n\n  addText(text: string) {\n    this.hubConnection.invoke(\"AddText\", text)\n      .catch((err) => console.log('failed to add text: ' + err));\n  }\n}\n\ninterface Meeting {\n  id: number;\n  text: string;\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { GameGuard } from './game.guard';\nimport { GameComponent } from './game/game.component';\nimport { HomeComponent } from './home/home.component';\nimport { MeetingComponent } from './meeting/meeting.component';\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: HomeComponent\n  },\n  {\n    canActivate: [GameGuard],\n    path: \"battlefield\",\n    component: GameComponent\n  },\n  {\n    path: \"chatroom\",\n    component: ChatComponent\n  },\n  {\n    path: \"meeting\",\n    component: MeetingComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr'\nimport { Subject } from 'rxjs';\nimport { GameState } from './interfaces/gamestate';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalrService {\n\n  private hubConnection: HubConnection = new HubConnectionBuilder().withUrl('/hubs/game').build();\n\n  constructor(private router: Router) {\n    this.startConnection();\n    this.addListeners();\n  }\n\n  getConnectionid() {\n    return this.hubConnection.connectionId;\n  }\n\n  private gameStateSubject = new Subject<GameState>();\n  gameState$ = this.gameStateSubject.asObservable();\n\n  private startConnection() {\n    this.hubConnection.start()\n      .catch((err) => console.log('error while establishing signalr connection: ' + err))\n  }\n\n  private addListeners() {\n    this.hubConnection.on(\"GetReady\", () => {\n      this.router.navigate([\"/battlefield\"]);\n    });\n    this.hubConnection.on(\"GetGameState\", (gameState) => {\n      this.gameStateSubject.next(gameState);\n    });\n  }\n\n  joinTeam(name: string, team: string) {\n    this.hubConnection.invoke(\"JoinTeam\", name, team)\n      .catch((err) => console.log('failed to join team: ' + err));\n  }\n\n  attack() {\n    this.hubConnection.invoke(\"Attack\")\n      .catch((err) => console.log('attack failed: ' + err));\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}